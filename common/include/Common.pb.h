// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common.proto

#ifndef PROTOBUF_Common_2eproto__INCLUDED
#define PROTOBUF_Common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace qmyx {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Common_2eproto();
void protobuf_AssignDesc_Common_2eproto();
void protobuf_ShutdownFile_Common_2eproto();

class RResult;

enum PACK_CMD {
  PACK_CMD_R_RESULT = 1,
  PACK_CMD_Q_ALIVE = 2,
  PACK_CMD_Q_ACCOUNT = 3,
  PACK_CMD_R_ACCOUNT = 4,
  PACK_CMD_Q_ROLE_CREATE = 5,
  PACK_CMD_Q_ROLE_LOGIN = 6,
  PACK_CMD_R_ROLE_LOGIN = 7,
  PACK_CMD_R_MAP_UPDATE = 8,
  PACK_CMD_Q_ROLE_MOVE = 9,
  PACK_CMD_R_ROLE_MOVE = 10,
  PACK_CMD_R_ROLE_VIEW = 11,
  PACK_CMD_Q_CREATE_MAP = 12,
  PACK_CMD_Q_CHANGE_MAP = 13,
  PACK_CMD_Q_OTHER_INFO = 14,
  PACK_CMD_R_OTHER_INFO = 15,
  PACK_CMD_R_PUBLIC_CITY_INFO = 16,
  PACK_CMD_Q_TRRIGER_AI = 17,
  PACK_CMD_R_AI_RESULT = 18
};
bool PACK_CMD_IsValid(int value);
const PACK_CMD PACK_CMD_MIN = PACK_CMD_R_RESULT;
const PACK_CMD PACK_CMD_MAX = PACK_CMD_R_AI_RESULT;
const int PACK_CMD_ARRAYSIZE = PACK_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* PACK_CMD_descriptor();
inline const ::std::string& PACK_CMD_Name(PACK_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    PACK_CMD_descriptor(), value);
}
inline bool PACK_CMD_Parse(
    const ::std::string& name, PACK_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PACK_CMD>(
    PACK_CMD_descriptor(), name, value);
}
// ===================================================================

class RResult : public ::google::protobuf::Message {
 public:
  RResult();
  virtual ~RResult();

  RResult(const RResult& from);

  inline RResult& operator=(const RResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RResult& default_instance();

  void Swap(RResult* other);

  // implements Message ----------------------------------------------

  RResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RResult& from);
  void MergeFrom(const RResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 msg_cmd = 1;
  inline bool has_msg_cmd() const;
  inline void clear_msg_cmd();
  static const int kMsgCmdFieldNumber = 1;
  inline ::google::protobuf::uint32 msg_cmd() const;
  inline void set_msg_cmd(::google::protobuf::uint32 value);

  // required uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint32 sub_cmd = 3;
  inline bool has_sub_cmd() const;
  inline void clear_sub_cmd();
  static const int kSubCmdFieldNumber = 3;
  inline ::google::protobuf::uint32 sub_cmd() const;
  inline void set_sub_cmd(::google::protobuf::uint32 value);

  // optional uint32 append1 = 4;
  inline bool has_append1() const;
  inline void clear_append1();
  static const int kAppend1FieldNumber = 4;
  inline ::google::protobuf::uint32 append1() const;
  inline void set_append1(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qmyx.RResult)
 private:
  inline void set_has_msg_cmd();
  inline void clear_has_msg_cmd();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_sub_cmd();
  inline void clear_has_sub_cmd();
  inline void set_has_append1();
  inline void clear_has_append1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 msg_cmd_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 sub_cmd_;
  ::google::protobuf::uint32 append1_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static RResult* default_instance_;
};
// ===================================================================


// ===================================================================

// RResult

// required uint32 msg_cmd = 1;
inline bool RResult::has_msg_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RResult::set_has_msg_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RResult::clear_has_msg_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RResult::clear_msg_cmd() {
  msg_cmd_ = 0u;
  clear_has_msg_cmd();
}
inline ::google::protobuf::uint32 RResult::msg_cmd() const {
  return msg_cmd_;
}
inline void RResult::set_msg_cmd(::google::protobuf::uint32 value) {
  set_has_msg_cmd();
  msg_cmd_ = value;
}

// required uint32 result = 2;
inline bool RResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RResult::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 RResult::result() const {
  return result_;
}
inline void RResult::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional uint32 sub_cmd = 3;
inline bool RResult::has_sub_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RResult::set_has_sub_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RResult::clear_has_sub_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RResult::clear_sub_cmd() {
  sub_cmd_ = 0u;
  clear_has_sub_cmd();
}
inline ::google::protobuf::uint32 RResult::sub_cmd() const {
  return sub_cmd_;
}
inline void RResult::set_sub_cmd(::google::protobuf::uint32 value) {
  set_has_sub_cmd();
  sub_cmd_ = value;
}

// optional uint32 append1 = 4;
inline bool RResult::has_append1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RResult::set_has_append1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RResult::clear_has_append1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RResult::clear_append1() {
  append1_ = 0u;
  clear_has_append1();
}
inline ::google::protobuf::uint32 RResult::append1() const {
  return append1_;
}
inline void RResult::set_append1(::google::protobuf::uint32 value) {
  set_has_append1();
  append1_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace qmyx

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::qmyx::PACK_CMD>() {
  return ::qmyx::PACK_CMD_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Common_2eproto__INCLUDED
