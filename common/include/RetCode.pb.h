// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RetCode.proto

#ifndef PROTOBUF_RetCode_2eproto__INCLUDED
#define PROTOBUF_RetCode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace qmyx {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RetCode_2eproto();
void protobuf_AssignDesc_RetCode_2eproto();
void protobuf_ShutdownFile_RetCode_2eproto();


enum RET {
  RET_ACCOUNT = 1,
  RET_PASSWORD = 2,
  RET_ROLE_EMPTY = 3,
  RET_ROLE_EXIST = 4,
  RET_ROLE_NAME = 5,
  RET_MOVE_ILLGAL = 6,
  RET_ROLE_ATTR = 7
};
bool RET_IsValid(int value);
const RET RET_MIN = RET_ACCOUNT;
const RET RET_MAX = RET_ROLE_ATTR;
const int RET_ARRAYSIZE = RET_MAX + 1;

const ::google::protobuf::EnumDescriptor* RET_descriptor();
inline const ::std::string& RET_Name(RET value) {
  return ::google::protobuf::internal::NameOfEnum(
    RET_descriptor(), value);
}
inline bool RET_Parse(
    const ::std::string& name, RET* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RET>(
    RET_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace qmyx

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::qmyx::RET>() {
  return ::qmyx::RET_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RetCode_2eproto__INCLUDED
