// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AI.proto

#ifndef PROTOBUF_AI_2eproto__INCLUDED
#define PROTOBUF_AI_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)

namespace qmyx {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AI_2eproto();
void protobuf_AssignDesc_AI_2eproto();
void protobuf_ShutdownFile_AI_2eproto();

class QTriggleAI;
class QAIResult;

// ===================================================================

class QTriggleAI : public ::google::protobuf::Message {
 public:
  QTriggleAI();
  virtual ~QTriggleAI();

  QTriggleAI(const QTriggleAI& from);

  inline QTriggleAI& operator=(const QTriggleAI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QTriggleAI& default_instance();

  void Swap(QTriggleAI* other);

  // implements Message ----------------------------------------------

  QTriggleAI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QTriggleAI& from);
  void MergeFrom(const QTriggleAI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nmapId = 1;
  inline bool has_nmapid() const;
  inline void clear_nmapid();
  static const int kNmapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nmapid() const;
  inline void set_nmapid(::google::protobuf::uint32 value);

  // required uint32 nId = 2;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 2;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // required uint32 nAiId = 3;
  inline bool has_naiid() const;
  inline void clear_naiid();
  static const int kNAiIdFieldNumber = 3;
  inline ::google::protobuf::uint32 naiid() const;
  inline void set_naiid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qmyx.QTriggleAI)
 private:
  inline void set_has_nmapid();
  inline void clear_has_nmapid();
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_naiid();
  inline void clear_has_naiid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nmapid_;
  ::google::protobuf::uint32 nid_;
  ::google::protobuf::uint32 naiid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_AI_2eproto();
  friend void protobuf_AssignDesc_AI_2eproto();
  friend void protobuf_ShutdownFile_AI_2eproto();

  void InitAsDefaultInstance();
  static QTriggleAI* default_instance_;
};
// -------------------------------------------------------------------

class QAIResult : public ::google::protobuf::Message {
 public:
  QAIResult();
  virtual ~QAIResult();

  QAIResult(const QAIResult& from);

  inline QAIResult& operator=(const QAIResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QAIResult& default_instance();

  void Swap(QAIResult* other);

  // implements Message ----------------------------------------------

  QAIResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QAIResult& from);
  void MergeFrom(const QAIResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nId = 1;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nid() const;
  inline void set_nid(::google::protobuf::uint32 value);

  // optional uint32 nposx = 2;
  inline bool has_nposx() const;
  inline void clear_nposx();
  static const int kNposxFieldNumber = 2;
  inline ::google::protobuf::uint32 nposx() const;
  inline void set_nposx(::google::protobuf::uint32 value);

  // optional uint32 nposy = 3;
  inline bool has_nposy() const;
  inline void clear_nposy();
  static const int kNposyFieldNumber = 3;
  inline ::google::protobuf::uint32 nposy() const;
  inline void set_nposy(::google::protobuf::uint32 value);

  // optional uint32 nblood = 4;
  inline bool has_nblood() const;
  inline void clear_nblood();
  static const int kNbloodFieldNumber = 4;
  inline ::google::protobuf::uint32 nblood() const;
  inline void set_nblood(::google::protobuf::uint32 value);

  // optional uint32 nskill = 5;
  inline bool has_nskill() const;
  inline void clear_nskill();
  static const int kNskillFieldNumber = 5;
  inline ::google::protobuf::uint32 nskill() const;
  inline void set_nskill(::google::protobuf::uint32 value);

  // optional uint32 nplayerid = 6;
  inline bool has_nplayerid() const;
  inline void clear_nplayerid();
  static const int kNplayeridFieldNumber = 6;
  inline ::google::protobuf::uint32 nplayerid() const;
  inline void set_nplayerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qmyx.QAIResult)
 private:
  inline void set_has_nid();
  inline void clear_has_nid();
  inline void set_has_nposx();
  inline void clear_has_nposx();
  inline void set_has_nposy();
  inline void clear_has_nposy();
  inline void set_has_nblood();
  inline void clear_has_nblood();
  inline void set_has_nskill();
  inline void clear_has_nskill();
  inline void set_has_nplayerid();
  inline void clear_has_nplayerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nid_;
  ::google::protobuf::uint32 nposx_;
  ::google::protobuf::uint32 nposy_;
  ::google::protobuf::uint32 nblood_;
  ::google::protobuf::uint32 nskill_;
  ::google::protobuf::uint32 nplayerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_AI_2eproto();
  friend void protobuf_AssignDesc_AI_2eproto();
  friend void protobuf_ShutdownFile_AI_2eproto();

  void InitAsDefaultInstance();
  static QAIResult* default_instance_;
};
// ===================================================================


// ===================================================================

// QTriggleAI

// required uint32 nmapId = 1;
inline bool QTriggleAI::has_nmapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QTriggleAI::set_has_nmapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QTriggleAI::clear_has_nmapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QTriggleAI::clear_nmapid() {
  nmapid_ = 0u;
  clear_has_nmapid();
}
inline ::google::protobuf::uint32 QTriggleAI::nmapid() const {
  return nmapid_;
}
inline void QTriggleAI::set_nmapid(::google::protobuf::uint32 value) {
  set_has_nmapid();
  nmapid_ = value;
}

// required uint32 nId = 2;
inline bool QTriggleAI::has_nid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QTriggleAI::set_has_nid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QTriggleAI::clear_has_nid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QTriggleAI::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 QTriggleAI::nid() const {
  return nid_;
}
inline void QTriggleAI::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// required uint32 nAiId = 3;
inline bool QTriggleAI::has_naiid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QTriggleAI::set_has_naiid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QTriggleAI::clear_has_naiid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QTriggleAI::clear_naiid() {
  naiid_ = 0u;
  clear_has_naiid();
}
inline ::google::protobuf::uint32 QTriggleAI::naiid() const {
  return naiid_;
}
inline void QTriggleAI::set_naiid(::google::protobuf::uint32 value) {
  set_has_naiid();
  naiid_ = value;
}

// -------------------------------------------------------------------

// QAIResult

// required uint32 nId = 1;
inline bool QAIResult::has_nid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QAIResult::set_has_nid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QAIResult::clear_has_nid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QAIResult::clear_nid() {
  nid_ = 0u;
  clear_has_nid();
}
inline ::google::protobuf::uint32 QAIResult::nid() const {
  return nid_;
}
inline void QAIResult::set_nid(::google::protobuf::uint32 value) {
  set_has_nid();
  nid_ = value;
}

// optional uint32 nposx = 2;
inline bool QAIResult::has_nposx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QAIResult::set_has_nposx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QAIResult::clear_has_nposx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QAIResult::clear_nposx() {
  nposx_ = 0u;
  clear_has_nposx();
}
inline ::google::protobuf::uint32 QAIResult::nposx() const {
  return nposx_;
}
inline void QAIResult::set_nposx(::google::protobuf::uint32 value) {
  set_has_nposx();
  nposx_ = value;
}

// optional uint32 nposy = 3;
inline bool QAIResult::has_nposy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QAIResult::set_has_nposy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QAIResult::clear_has_nposy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QAIResult::clear_nposy() {
  nposy_ = 0u;
  clear_has_nposy();
}
inline ::google::protobuf::uint32 QAIResult::nposy() const {
  return nposy_;
}
inline void QAIResult::set_nposy(::google::protobuf::uint32 value) {
  set_has_nposy();
  nposy_ = value;
}

// optional uint32 nblood = 4;
inline bool QAIResult::has_nblood() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QAIResult::set_has_nblood() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QAIResult::clear_has_nblood() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QAIResult::clear_nblood() {
  nblood_ = 0u;
  clear_has_nblood();
}
inline ::google::protobuf::uint32 QAIResult::nblood() const {
  return nblood_;
}
inline void QAIResult::set_nblood(::google::protobuf::uint32 value) {
  set_has_nblood();
  nblood_ = value;
}

// optional uint32 nskill = 5;
inline bool QAIResult::has_nskill() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QAIResult::set_has_nskill() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QAIResult::clear_has_nskill() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QAIResult::clear_nskill() {
  nskill_ = 0u;
  clear_has_nskill();
}
inline ::google::protobuf::uint32 QAIResult::nskill() const {
  return nskill_;
}
inline void QAIResult::set_nskill(::google::protobuf::uint32 value) {
  set_has_nskill();
  nskill_ = value;
}

// optional uint32 nplayerid = 6;
inline bool QAIResult::has_nplayerid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QAIResult::set_has_nplayerid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QAIResult::clear_has_nplayerid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QAIResult::clear_nplayerid() {
  nplayerid_ = 0u;
  clear_has_nplayerid();
}
inline ::google::protobuf::uint32 QAIResult::nplayerid() const {
  return nplayerid_;
}
inline void QAIResult::set_nplayerid(::google::protobuf::uint32 value) {
  set_has_nplayerid();
  nplayerid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace qmyx

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AI_2eproto__INCLUDED
